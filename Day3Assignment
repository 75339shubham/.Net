Q1.create a class student with member variable name, maths, science, eng
Create a method which will return total marks[300]
Create a method which will display name and total.

using System;
using Vita;

namespace Vita
{
    class Student
    {
         string name;
         int maths;
         int science;
         int english;

        public Student(string nm, int math, int sci, int eng)
        {
            name = nm;
            maths = math;
            science = sci;
            english = eng;
        }

        public double Calculate()
        {
            return maths + science + english;
        }
        public float CalPercentage()
        {
            return (float)((Calculate() * 100) / 300);
        }

        public void DisplayDetails()
        {
            double totalMarks = Calculate();
            float percantage = CalPercentage();
            Console.WriteLine($"Name: {name}");
            Console.WriteLine($"Total Marks out of 300: {totalMarks} {percantage}%");
        }
    }
}

using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using Vita;

namespace ConsoleApp1
{
    class Program
    {
        static void Main(string[] args)
        {
         
            Student s1 = new Student("Surendra", 90, 85, 92);
            Student s2 = new Student("Shubham", 35, 35, 35);

         
            s1.DisplayDetails();
            s2.DisplayDetails();
        }
    }
}




Q2. create a class account having member name , id, balance
Create a method -public void deposit(int amt){ balance=balance+amt}
Create a method withdraw  -public void withdraw(int amt){ balance=balance-amt}
Create display method which will display name and balance.
Create 2 object and do transaction. 

using Sbi;
using System;

namespace Sbi
{
    class Account
    {
        private string name;
        private int id;
        private double balance;

        public Account(string nm, int Id, double bal)
        {
            name = nm;
            id = Id;
            balance = bal;
        }

        public void Deposit(double amt)
        {
            if (amt > 0)
            {
                balance += amt;
                Console.WriteLine($"Deposited Rs {amt}. New balance: Rs {balance}");
            }
            else
            {
                Console.WriteLine("Invalid deposit amount");
            }
        }

        public void Withdraw(double amt)
        {
            if (amt > 0 && amt <= balance)
            {
                balance -= amt;
                Console.WriteLine($"Withdrawn Rs {amt}. New balance: Rs.{balance}");
            }
            else
            {
                Console.WriteLine("Invalid withdrawal amount or insufficient balance.");
            }
        }

        public void DisplayAccountDetails()
        {
            Console.WriteLine($"Account Name: {name}");
            Console.WriteLine($"Account ID: {id}");
            Console.WriteLine($"Account Balance: Rs {balance}");
        }
    }
}


using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Xml.Linq;
using Sbi;

namespace ConsoleApp1
{
    

        class Program
        {
            static void Main(string[] args)
            {
            
                Account a1 = new Account("abc", 1234, 8587.52);
                Account a2 = new Account("xyz", 1235, 7858.25);

                a1.DisplayAccountDetails();
                a2.DisplayAccountDetails();

               
                a1.Deposit(500.0);
                a2.Withdraw(200.0);

                a1.DisplayAccountDetails();
                a2.DisplayAccountDetails();
            }
        }


    }


3]Create class Employee with private vatiable id name salary, netsalary
Create method public double Calculatesal()
Which will return net salary. Netsalary= salary-salary*10%
Create method display which will display Name and net salary.
Create 3 object of a class and call display method.





using System;

namespace JobAbc
{
    class Employee
    {
        private string name;
        private int id;
        private double salary;
        private double netsalary;

        public Employee(int id, string name, double salary)
        {
            this.id = id;
            this.name = name;
            this.salary = salary;
            this.netsalary = CalculateSalary();
        }

        public double CalculateSalary()
        {
            return salary - (salary * 0.10);
        }

        public void Display()
        {
            Console.WriteLine($"Name: {name}");
            Console.WriteLine($"Net Salary:Rs {netsalary}");    
        }
    }
}

using JobAbc;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace ConsoleApp1
{
    class jobsal
    {
        static void Main(string[] args)
        {
            // Create three employee objects
            Employee e1 = new Employee(1, "abc", 50000);
            Employee e2 = new Employee(2, "efg", 60000);
            Employee e3 = new Employee(3, "jkl", 70000);

            // Display employee details
            e1.Display();
            e2.Display();
            e3.Display();
        }
    }

}

4]
using System;

namespace Vita
{
    class Student
    {
        private static string schoolName; 
        private string name;
        private int maths;
        private int science;
        private int english;

        static Student()
        {
            schoolName = "VITA"; 
        }

        public Student(string nm, int math, int sci, int eng)
        {
            name = nm;
            maths = math;
            science = sci;
            english = eng;
        }

        public double Calculate()
        {
            return maths + science + english;
        }

        public float CalPercentage()
        {
            return (float)((Calculate() * 100) / 300);
        }

        public void DisplayDetails()
        {
            double totalMarks = Calculate();
            float percentage = CalPercentage();
            Console.WriteLine($"Name: {name}");
            Console.WriteLine($"School Name: {schoolName}");
            Console.WriteLine($"Total Marks out of 300: {totalMarks} {percentage}%");
        }
    }
}

using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using Vita;

namespace ConsoleApp1
{
    class Program
    {
        static void Main(string[] args)
        {
            Student s1 = new Student("Surendra", 90, 85, 92);
            Student s2 = new Student("Shubham", 35, 35, 35);

            s1.DisplayDetails();
            s2.DisplayDetails();
        }
    }
}


5]USING STATIC CONST

using System;

namespace EmployeeManagement
{
    enum Dept
    {
        MKT,
        ADMIN,
        ADV
    }

    class Employee
    {
        // Instance members
        private int Id;
        private string Name;
        private double Salary;
        private double NetSalary;
        private Dept Department;

        // Constructor
        public Employee(int id, string name, double salary, Dept department)
        {
            Id = id;
            Name = name;
            Salary = salary;
            Department = department;
            CalculateNetSalary(0.1); // Assume a 10% tax rate
        }

        // Calculate Net Salary after tax
        private void CalculateNetSalary(double taxRate)
        {
            NetSalary = Salary - Salary * taxRate;
        }

        // Display employee information
        public void Display()
        {
            Console.WriteLine($"Name: {Name}");
            Console.WriteLine($"Net Salary: {NetSalary:C}");
            Console.WriteLine($"Department: {Department}");
        }

        // Static method to print the company name
        public static void PrintCompanyName()
        {
            Console.WriteLine("Welcome to ABC Company!");
        }
    }

    class Program
    {
        static void Main(string[] args)
        {
            // Print the company name
            Employee.PrintCompanyName();

            // Create employee instances
            Employee e1 = new Employee(1, "Raj", 50000, Dept.MKT);
            Employee e2 = new Employee(2, "Reena", 60000, Dept.ADMIN);
            Employee e3 = new Employee(3, "Geeta", 70000, Dept.ADV);

            // Display employee information
            e1.Display();
            e2.Display();
            e3.Display();

            Console.ReadLine();
        }
    }
}


6]USING STATIC CONST

using System;

namespace EmployeeManagement
{
    enum Dept
    {
        MKT,
        ADMIN,
        ADV
    }

    class Employee
    {
        // Instance members
        private int Id;
        private string Name;
        private double Salary;
        private double NetSalary;
        private Dept Department;

        // Constructor
        public Employee(int id, string name, double salary, Dept department)
        {
            Id = id;
            Name = name;
            Salary = salary;
            Department = department;
            CalculateNetSalary(0.1); // Assume a 10% tax rate
        }

        // Calculate Net Salary after tax
        private void CalculateNetSalary(double taxRate)
        {
            NetSalary = Salary - Salary * taxRate;
        }

        // Display employee information
        public void Display()
        {
            Console.WriteLine($"Name: {Name}");
            Console.WriteLine($"Net Salary: {NetSalary:C}");
            Console.WriteLine($"Department: {Department}");
        }

        // Static method to print the company name
        public static void PrintCompanyName()
        {
            Console.WriteLine("Welcome to ABC Company!");
        }
    }

    class Program
    {
        static void Main(string[] args)
        {
            // Print the company name
            Employee.PrintCompanyName();

            // Create employee instances
            Employee e1 = new Employee(1, "ABC", 50000, Dept.MKT);
            Employee e2 = new Employee(2, "EFG", 60000, Dept.ADMIN);
            Employee e3 = new Employee(3, "HIJ", 70000, Dept.ADV);

            // Display employee information
            e1.Display();
            e2.Display();
            e3.Display();

            Console.ReadLine();
        }
    }
}


